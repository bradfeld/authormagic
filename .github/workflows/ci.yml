name: CI with Bundle Analyzer

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Lint
        env:
          # Required environment variables for linting (using CI flag to disable Clerk)
          NEXT_PUBLIC_CI_DISABLE_CLERK: true
          NEXT_PUBLIC_SUPABASE_URL: https://placeholder.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: sb_publishable_FAKE0123456789ABCDEF_ci_test
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: pk_test_FAKE0123456789ABCDEF
          CLERK_SECRET_KEY: sk_test_FAKE0123456789ABCDEF
          SUPABASE_SERVICE_ROLE_KEY: sb_secret_FAKE0123456789ABCDEF_ci_test
          ISBNDB_API_KEY: 99999_FAKE0123456789ABCDEF
          GOOGLE_BOOKS_API_KEY: AIzaFAKE0123456789ABCDEF
          ANTHROPIC_API_KEY: sk-ant-FAKE0123456789ABCDEF
        run: npm run lint

      - name: Type Check
        env:
          # Required environment variables for type checking (using CI flag to disable Clerk)
          NEXT_PUBLIC_CI_DISABLE_CLERK: true
          NEXT_PUBLIC_SUPABASE_URL: https://placeholder.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: sb_publishable_FAKE0123456789ABCDEF_ci_test
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: pk_test_FAKE0123456789ABCDEF
          CLERK_SECRET_KEY: sk_test_FAKE0123456789ABCDEF
          SUPABASE_SERVICE_ROLE_KEY: sb_secret_FAKE0123456789ABCDEF_ci_test
          ISBNDB_API_KEY: 99999_FAKE0123456789ABCDEF
          GOOGLE_BOOKS_API_KEY: AIzaFAKE0123456789ABCDEF
          ANTHROPIC_API_KEY: sk-ant-FAKE0123456789ABCDEF
        run: npm run type-check

      - name: Build with Bundle Analyzer
        env:
          ANALYZE: true
          # Required environment variables for build (using CI flag to disable Clerk)
          NEXT_PUBLIC_CI_DISABLE_CLERK: true
          NEXT_PUBLIC_SUPABASE_URL: https://placeholder.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: sb_publishable_FAKE0123456789ABCDEF_ci_test
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: pk_test_FAKE0123456789ABCDEF
          CLERK_SECRET_KEY: sk_test_FAKE0123456789ABCDEF
          SUPABASE_SERVICE_ROLE_KEY: sb_secret_FAKE0123456789ABCDEF_ci_test
          ISBNDB_API_KEY: 99999_FAKE0123456789ABCDEF
          GOOGLE_BOOKS_API_KEY: AIzaFAKE0123456789ABCDEF
          ANTHROPIC_API_KEY: sk-ant-FAKE0123456789ABCDEF
        run: npm run build

      - name: Debug - Check bundle analyzer output
        run: |
          echo "Checking for bundle analyzer output..."
          ls -la .next/ || echo "❌ No .next directory found"
          ls -la .next/analyze/ || echo "❌ No .next/analyze directory found"
          if [ -d ".next/analyze" ]; then
            echo "✅ Bundle analyzer files found:"
            ls -la .next/analyze/
            du -h .next/analyze/*
          fi

      - name: Upload bundle analyzer report
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-bundle-analyzer-report
          path: .next/analyze/
          if-no-files-found: error
          retention-days: 30

      - name: Check bundle size thresholds
        run: |
          echo "📊 Bundle Analysis Summary:"
          if [ -f ".next/analyze/client.html" ]; then
            CLIENT_SIZE=$(du -sb .next/analyze/client.html | cut -f1)
            echo "Client bundle report: ${CLIENT_SIZE} bytes"
            
            # Optional: Add size threshold check (adjust as needed)
            MAX_CLIENT_SIZE=1000000  # 1MB threshold for report file
            if [ "$CLIENT_SIZE" -gt "$MAX_CLIENT_SIZE" ]; then
              echo "⚠️  Client bundle report size ${CLIENT_SIZE} exceeds threshold ${MAX_CLIENT_SIZE}"
              echo "This might indicate bundle size growth - review the analyzer report"
            else
              echo "✅ Client bundle report size within acceptable range"
            fi
          else
            echo "❌ Client bundle report not found"
            exit 1
          fi

      - name: Start Next.js for Security Scan
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          # Use CI environment variables for StackHawk scanning
          NEXT_PUBLIC_CI_DISABLE_CLERK: true
          NEXT_PUBLIC_SUPABASE_URL: https://placeholder.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: sb_publishable_FAKE0123456789ABCDEF_ci_test
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: pk_test_FAKE0123456789ABCDEF
          CLERK_SECRET_KEY: sk_test_FAKE0123456789ABCDEF
          SUPABASE_SERVICE_ROLE_KEY: sb_secret_FAKE0123456789ABCDEF_ci_test
          ISBNDB_API_KEY: 99999_FAKE0123456789ABCDEF
          GOOGLE_BOOKS_API_KEY: AIzaFAKE0123456789ABCDEF
          ANTHROPIC_API_KEY: sk-ant-FAKE0123456789ABCDEF
          NODE_ENV: production
        run: |
          echo "🔍 Starting Next.js application for security scanning..."
          npm run start &
          NEXT_PID=$!
          echo "Next.js PID: $NEXT_PID"
          
          # Wait for application to be ready
          echo "⏳ Waiting for application to start..."
          for i in {1..30}; do
            if curl -f -s http://localhost:3000 > /dev/null; then
              echo "✅ Application is ready for scanning"
              break
            fi
            echo "Attempt $i: Application not ready yet, waiting..."
            sleep 2
          done
          
          # Verify application is responding
          curl -f http://localhost:3000 || {
            echo "❌ Failed to start Next.js application"
            kill $NEXT_PID 2>/dev/null || true
            exit 1
          }

      - name: Run StackHawk Security Scan
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: stackhawk/hawkscan-action@v2.2.0
        continue-on-error: true
        with:
          apiKey: ${{ secrets.HAWK_API_KEY }}
          codeScanningAlerts: false  # Disable GitHub Code Scanning upload to avoid permissions issues
          githubToken: ${{ github.token }}
        env:
          HAWK_APPLICATION_ID: ${{ secrets.HAWK_APPLICATION_ID }}
          HAWK_ENVIRONMENT: CI
          HAWK_HOST: http://localhost:3000
          HAWK_FAILURE_THRESHOLD: high  # Allow medium findings (CSP unsafe directives are often necessary) 